1. What Is Linux?

Explanation:
Linux is an open-source operating system (OS) based on the Unix architecture.
It manages your computer’s hardware and software — just like Windows or macOS — but it’s known for being secure, customizable, and free.

Key idea:
While Windows hides most system details from users, Linux gives you full control of the machine — perfect for developers, ethical hackers, and system admins.

Real-life example:
If you use an Android phone — you’re already using Linux! Android runs on a Linux kernel.

2. What Makes Linux Different?

Explanation:
Linux is open-source, meaning anyone can view, modify, or share its code.
This makes it highly secure, stable, and transparent.
It’s widely used in servers, cybersecurity, IoT devices, and programming.

Key differences from Windows:
| Feature       | Windows  | Linux               |
| ------------- | -------- | ------------------- |
| Cost          | Paid     | Free                |
| Source Code   | Closed   | Open                |
| Security      | Moderate | Very strong         |
| Customization | Limited  | Highly customizable |
| Command Line  | Optional | Core feature        |

3. Linux Architecture

Linux is made up of 4 main layers:

Kernel: The heart of Linux. Manages memory, CPU, and hardware communication.

System Libraries: Provide functions and system calls for applications.

System Utilities: Basic tools for system maintenance and operations.

User Space: Where users interact with the system through shells or GUI.

Example:
When you type a command like ls:

The shell sends it to the kernel

The kernel accesses the filesystem

It returns the list of files to your terminal

4. The Linux Kernel

Explanation:
The kernel is the core component of Linux. It controls:

Process management (CPU usage)

Memory management

Device drivers (keyboard, mouse, etc.)

System calls and security

Example:
If you open 5 programs, the kernel decides how much CPU and memory each gets.
That’s why Linux is stable even under heavy load — the kernel handles tasks efficiently.

Command Example:

uname -r


This shows your Linux kernel version.

5. Linux Distributions (Distros)

Explanation:
A distribution (distro) is a complete Linux package — kernel + software + tools — customized for different purposes.

Popular Linux Distros:

Ubuntu: Beginner-friendly (good for learners)

Kali Linux: Used for cybersecurity & penetration testing

Debian: Known for stability

Fedora: Focused on innovation

Arch Linux: For advanced users who want full control

CentOS / RHEL: Used in enterprise servers

Example:
If you’re learning ethical hacking — use Kali Linux.
If you’re learning programming — use Ubuntu.

6. Linux File System Structure

Explanation:
Linux organizes files in a tree structure, starting from the root directory /.
Everything — files, folders, even devices — is treated as a file.

Important directories:
| Directory | Description                            |
| --------- | -------------------------------------- |
| `/`       | Root directory (base of the system)    |
| `/home`   | User personal files                    |
| `/bin`    | Basic commands (like `ls`, `cp`, `mv`) |
| `/etc`    | Configuration files                    |
| `/var`    | Variable files like logs               |
| `/usr`    | Installed software and utilities       |
| `/dev`    | Device files (USB, drives)             |
Example:

cd /home/dagim
ls


→ Navigates to your home folder and lists your personal files.

7. The Linux Shell

Explanation:
A shell is the command-line interface (CLI) that lets you communicate with the OS.
The most common one is Bash (Bourne Again SHell).

Example commands:

pwd     # Shows current directory
ls      # Lists files
cd ..   # Goes one directory up
mkdir projects  # Creates a folder named 'projects'


Why it’s powerful:
You can automate tasks, write scripts, and manage entire systems with just text commands — no mouse needed.

8. Basic Linux Commands
| Command | Description             |
| ------- | ----------------------- |
| `pwd`   | Print working directory |
| `ls`    | List files and folders  |
| `cd`    | Change directory        |
| `mkdir` | Create a folder         |
| `rm`    | Remove file/folder      |
| `cp`    | Copy file               |
| `mv`    | Move or rename file     |
| `cat`   | View file content       |
| `chmod` | Change file permissions |
| `sudo`  | Run command as admin    |
Example:

sudo apt update && sudo apt upgrade

Updates all installed software (Ubuntu/Debian systems).


9. Users and Permissions

Explanation:
Linux is a multi-user system.
Each user has permissions that define what they can read, write, or execute.

Three types of permissions:

Read (r): View content

Write (w): Modify content

Execute (x): Run the file

Example:

ls -l


Might show:

-rwxr-xr--


This means:

Owner can read, write, execute

Group can read and execute

Others can only read

Change permissions:

chmod 755 script.sh

10. Package Management

Explanation:
Package managers make installing and updating software easy.

Common package managers:
| Distro        | Package Manager | Example Command            |
| ------------- | --------------- | -------------------------- |
| Ubuntu/Debian | `apt`           | `sudo apt install firefox` |
| Fedora        | `dnf`           | `sudo dnf install nginx`   |
| Arch Linux    | `pacman`        | `sudo pacman -S vlc`       |

Example:
To remove a program:

sudo apt remove gimp

11. Linux Processes

Explanation:
Every running task (like Chrome, VS Code, or background jobs) is a process.
Linux manages them efficiently through process IDs (PIDs).

Commands:

ps aux      # Show all running processes
top         # Real-time system monitor
kill <PID>  # Stop a process


Example:
If a program freezes:

kill 2734


Ends the process with ID 2734.