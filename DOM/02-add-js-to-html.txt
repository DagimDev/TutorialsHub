### **How to Add JavaScript to HTML**  
There are **3 main ways** to include JavaScript in an HTML file:  

---

### **1. Inline JavaScript (Directly in HTML)**  
Add JS code inside an HTML element using the `on*` attributes (e.g., `onclick`, `onload`).  

#### **Example: Button Click Alert**  
```html
<button onclick="alert('Hello World!')">Click Me</button>
```
✅ **Pros**: Quick for small actions.  
❌ **Cons**: Hard to maintain; mixes HTML and JS (not recommended for complex code).  

---

### **2. Internal JavaScript (Using `<script>` Tag)**  
Embed JS directly in HTML using `<script>` tags (usually placed before `</body>` for performance).  

#### **Example: Change Text on Click**  
```html
<!DOCTYPE html>
<html>
<body>
  <h1 id="demo">Welcome!</h1>
  <button onclick="changeText()">Change Text</button>

  <script>
    function changeText() {
      document.getElementById("demo").innerHTML = "Text Updated!";
    }
  </script>
</body>
</html>
```
✅ **Pros**: Keeps JS in one file (good for small projects).  
❌ **Cons**: Still mixes logic with HTML; not reusable across pages.  

---

### **3. External JavaScript (Separate `.js` File)**  
Best practice for larger projects. Link an external `.js` file using `<script src="file.js">`.  

#### **Step 1: Create `script.js`**  
```javascript
// script.js
function changeText() {
  document.getElementById("demo").innerHTML = "Loaded from JS file!";
}
```

#### **Step 2: Link it in HTML**  
```html
<!DOCTYPE html>
<html>
<body>
  <h1 id="demo">Welcome!</h1>
  <button onclick="changeText()">Change Text</button>

  <!-- Place before </body> -->
  <script src="script.js"></script>
</body>
</html>
```
✅ **Pros**:  
- Clean separation of HTML and JS.  
- Reusable across multiple pages.  
- Better performance (browser caches JS files).  

❌ **Cons**: Requires an extra HTTP request (minimal impact).  

---

