### **How HTML and JavaScript Work Together via the DOM**  

The **Document Object Model (DOM)** is the bridge between **HTML (structure)** and **JavaScript (behavior)**. It allows JS to **dynamically access, modify, and interact** with HTML elements.  

---

## **1. What is the DOM?**  
- The DOM is a **tree-like representation** of your HTML document.  
- Each HTML element (e.g., `<div>`, `<p>`, `<button>`) becomes a **"node"** in the DOM.  
- JavaScript can **manipulate these nodes** to change content, styles, and behavior.  

### **Example DOM Tree**  
```html
<html>
  <head>
    <title>Page</title>
  </head>
  <body>
    <h1 id="title">Hello</h1>
    <button>Click Me</button>
  </body>
</html>
```
⬇️ **DOM Representation**  
```
document
  ├── html
      ├── head
      │    └── title ("Page")
      └── body
           ├── h1#title ("Hello")
           └── button ("Click Me")
```

---

## **2. How JavaScript Interacts with the DOM**  
### **A. Selecting Elements**  
JS can **find and modify** HTML elements using methods like:  

| Method                            | Example                               | Returns |
|--------                           |---------                              |---------|
| `document.getElementById()`       | `document.getElementById("title")`    | Single element |
| `document.querySelector()`        | `document.querySelector("button")`    | First matching element |
| `document.querySelectorAll()`     | `document.querySelectorAll("p")`      | NodeList of all matches |

#### **Example: Change Text**  
```javascript
const heading = document.getElementById("title");
heading.textContent = "New Heading!"; // Updates the <h1>
```

---

### **B. Modifying Elements**  
Once selected, JS can:  
- **Change content** (`textContent`, `innerHTML`)  
- **Update styles** (`style.property`)  
- **Add/remove classes** (`classList.add()`, `classList.remove()`)  

#### **Example: Change Style & Content**  
```javascript
const button = document.querySelector("button");
button.textContent = "Don’t Click Me"; 
button.style.backgroundColor = "red";
```

---

### **C. Handling Events**  
JS can **respond to user actions** (clicks, keypresses, etc.) via **event listeners**.  

#### **Example: Click Event**  
```javascript
button.addEventListener("click", () => {
  alert("Button clicked!");
});
```

---
