Altering values (working with HTML attribute)
• Working with attributes: This is when you want to add, change or remove the attribute
value of an element.

className() method: The className property sets or returns the class name of
an element (the value of an element's class attribute). Note: To apply multiple
classes, separate them with spaces, like "test demo"
• Syntax: HTMLElementObject.className
• Let’s add 2 class names for <form> and print the added class names
var myForm = document.getElementById("formID");
myForm.className = "formClass1, formClass2"; //
"formClass1" and "formClass2" class names added
console.log(myForm.className);// prints
formClass1, formClass2
console.log(myForm.classList); // Also prints a
list containing the new class names "formClass1" and "formClass2"


ClassList() method: The classList property returns the class name(s) of an
element. This property can be used to add, remove and toggle CSS classes on an
element.
• Syntax: element.classList
• Let’s add a class name for our last name <input> and print the added
class name
var classForLastName=document.getElementsByName("lastName")[0];
classForLastName.classList.add("myLastName");// adds class name
console.log(classForLastName.classList);// prints a DOMToken list
containing the "myLastName" we just added above

Id property: The id property sets or returns the id of an element (the value of an
element's id attribute).
• Syntax: HTMLElementObject.id
• Let’s print the id for our <form> element
var myForm = document.getElementById("formID");
console.log(myForm.id); // prints the id name
"formID"