[1/25] Advanced Project Setup
Install: npm install sass --save-dev
File structure:
src/
  ├── scss/
  │   ├── abstracts/ (_variables.scss, _mixins.scss)
  │   ├── base/
  │   ├── components/
  │   └── main.scss

[2/25] Design Tokens
$design-system: (
  colors: (
    primary: #3498db,
    secondary: #2ecc71
  ),
  breakpoints: (sm: 576px, md: 768px)
);

[3/25] Namespaced Imports
@use 'abstracts/variables' as vars;
@use 'abstracts/mixins' as mix;

[4/25] Responsive Mixins
@mixin respond-above($breakpoint) {
  @if map-has-key(vars.$design-system, $breakpoint) {
    @media (min-width: map-get(vars.$design-system, $breakpoint)) {
      @content;
    }
  }
}

[5/25] BEM + Utility Patterns
.c-card {
  &__title { font-size: 1.2rem; }
  &--featured { @include mix.respond-above(md); }
}

[6/25] Advanced Theming
[data-theme="dark"] {
  --bg-color: #{map-get(map-get(vars.$design-system, 'colors'), 'secondary')};
}

[7/25] CSS Custom Properties
:root {
  --spacing-unit: #{vars.$spacing-unit};
  --primary-rgb: #{red(vars.$primary), green(vars.$primary), blue(vars.$primary)};
}

[8/25] Color Manipulation
.button {
  background: adjust-hue(vars.$primary, 15deg);
  border-color: transparentize(vars.$primary, 0.2);
}

[9/25] Dynamic Utilities
@each $name, $value in map-get(vars.$design-system, 'colors') {
  .bg-#{$name} { background: $value; }
}

[10/25] Animation System
@mixin animate($name, $duration: 300ms) {
  animation: $name $duration ease-out;
  @keyframes #{$name} { /* ... */ }
}

[11/25] Debug Utilities
@mixin debug($color: red) {
  outline: 1px solid $color;
}

[12/25] Performance Optimization
@charset "UTF-8";
@use 'abstracts/variables' as v with (
  $spacing-unit: 0.5rem !global
);

[13/25] Source Maps
Build command:
sass --watch src/scss:dist/css --embed-source-map

[14/25] Critical CSS
@layer critical {
  body { font-family: sans-serif; }
  .header { position: sticky; }
}

[15/25] PostCSS Integration
npm install postcss postcss-preset-env --save-dev

[16/25] Production Build
Build command:
sass src/scss:dist/css --no-source-map --style=compressed

[17/25] Linting Setup
npm install stylelint stylelint-config-standard-scss --save-dev

[18/25] Accessibility Mixins
@mixin focus-visible {
  &:focus-visible {
    outline: 2px solid vars.$primary;
  }
}

[19/25] Container Queries
@mixin container-query($min-width) {
  @container (min-width: $min-width) {
    @content;
  }
}

[20/25] Modern Fluid Typography
@mixin fluid-text($min-size, $max-size) {
  font-size: clamp(#{$min-size}, #{$max-size - $min-size} + 2vw, #{$max-size});
}

[21/25] CSS Nesting
.card {
  & > .title {
    font-weight: bold;
    
    @media (width >= 768px) {
      font-size: 1.5rem;
    }
  }
}

[1/25] Advanced Project Setup
Install: npm install sass --save-dev
File structure:
src/
  ├── scss/
  │   ├── abstracts/ (_variables.scss, _mixins.scss)
  │   ├── base/
  │   ├── components/
  │   └── main.scss

[2/25] Design Tokens
$design-system: (
  colors: (
    primary: #3498db,
    secondary: #2ecc71
  ),
  breakpoints: (sm: 576px, md: 768px)
);

[3/25] Namespaced Imports
@use 'abstracts/variables' as vars;
@use 'abstracts/mixins' as mix;
[4/25] Responsive Mixins
@mixin respond-above($breakpoint) {
  @if map-has-key(vars.$design-system, $breakpoint) {
    @media (min-width: map-get(vars.$design-system, $breakpoint)) {
      @content;
    }
  }
}

[5/25] BEM + Utility Patterns
.c-card {
  &__title { font-size: 1.2rem; }
  &--featured { @include mix.respond-above(md); }
}

[6/25] Advanced Theming
[data-theme="dark"] {
  --bg-color: #{map-get(map-get(vars.$design-system, 'colors'), 'secondary')};
}

[7/25] CSS Custom Properties
:root {
  --spacing-unit: #{vars.$spacing-unit};
  --primary-rgb: #{red(vars.$primary), green(vars.$primary), blue(vars.$primary)};
}

[8/25] Color Manipulation
.button {
  background: adjust-hue(vars.$primary, 15deg);
  border-color: transparentize(vars.$primary, 0.2);
}

[9/25] Dynamic Utilities
@each $name, $value in map-get(vars.$design-system, 'colors') {
  .bg-#{$name} { background: $value; }
}
