What happens in Git workflow?
▪ Creating a repository: Someone needs to create the central repository on GitHub
    if the project is a brand-new project. Here are the steps to create a new repository
    on GitHub:
Cloning: If it is not a brand-new project and there exists a Git repository already,
    each developer needs to create a local copy of the existing repository, a process
    called cloning. Here is the command you use to clone a remote repository:
● Go to any folder of your choice on your computer where you want to store
    the remote repository and open your terminal
● Type: git clone <URL address of the central repo>
o You can find the address of the central repo by going to your
    GitHub first and opening the repository. Click on “Code” green
    button and either copy the HTTPS or SSH URL
Committing: After cloning the project locally, each developer can make changes
    to the files and then commit. Committing is basically saving the changes the
    developer made to the local repository.

Pulling: After committing changes locally, if you just push changes to the remote
    repository, it is possible that another developer had already pushed updates that
    contain code that conflicts with yours. Git will notify the conflict between your
    version and the other developer’s version. Before publishing your updated version,
    you need to download the current version of the central repository by the process
    called, “git pull”. Pulling the current version of the remote repository will allow
    you to add your updated version on top of what everyone else has already done.
● Type: git pull
● Merging conflicts: Without pulling the current repository to your local
    computer, if you push your updated version to the central repository and
    if the version you have is different from that of the current version of the
    central repository, Git will refuse to push your changes to the central
    repository. This is done to avoid the overwriting of other official commits.
    In such cases, Git will give you a chance to manually resolve the conflict
    between your updated version and that of the central repository, with a
    process called merge conflict.
● Note: Merging conflicts manually is not advisable. Rather, it is highly
    advisable that developers pull the current version of the repository from
    GitHub before pushing their updated version to the central repository.
Pushing: Once the local repository has the new changes committed, these
    changes will need to be uploaded/pushed to the remote/central repository to share
    with other developers on the project.
● Type: git push