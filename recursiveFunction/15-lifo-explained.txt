LIFO stands for Last-In, First-Out, and it's a rule that describes how items are added and removed from certain data structures like the call stack.

üì¶ What Does ‚ÄúLast-In, First-Out‚Äù Mean?
The last item that was added to the stack is the first one to come out.

You push items onto the top, and you pop from the top.

Real-World Analogy: Stack of Plates
Imagine a stack of plates:

You put plate 1 on the table.

Then plate 2 goes on top.

Then plate 3 goes on top of that.

To remove a plate, you always take the top one first:

Remove plate 3 (last in ‚Üí first out)

Then plate 2

Then plate 1


In JavaScript's Call Stack
Each time a function is called, it's pushed on top of the stack.
When a function finishes, it's popped off the top.

Example:

function one() {
  two();
}

function two() {
  three();
}

function three() {
  console.log("Done");
}

one();
Call stack order:

three() ‚Üê last in ‚Üí first out (popped first)
two()
one()