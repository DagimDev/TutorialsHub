 RegEx in JavaScript 
    ******************* 
      - In JavaScript, regular expressions are objects (RegExp). Just like Arrays. There are methods inside of the object that we can use to help us with the matching. The exec() and test() methods are the main ones. 

      - To start using RegEx in JavaScript, we need to create the expression object first. We can use the literal or the constructor method to create the object. 
Syntax
      ****** 
        let var = /pattern/modifiers;

        Ex: 
          let re = /ab+c/i; // literal notation
          let re = new RegExp('ab+c', 'i') // 


          - The "pattern" is the sequence we use to filter
            - It is composed of simple characters and/or a combination of simple and special characters.
            - When you search for data in a text, you can use this search pattern to describe what you are searching for.

          - The "modifiers" are just to describe if the search is global or case-sensitive 
        
          Ex: 
            var someVar = /abebe/i; 
            - This is a pattern that can be used to match for the word "abebe"
 Using String Methods with RegEx 
      ******************************* 

        - Regular expressions are often used with string methods. The common String methods we use with regex are match(), search() and replace() methods.

        Using String search()
        ********************* 
          The search() method searches a string for a specified value, and returns the position of the match.
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/search

          Ex: 
            var str = "Abebe beso bela!";
            var n = str.search("beso");

            n is 6 
        
          Using String search() With a RegEx

            - To use Regular expression inside of the search method, we can just replace the search string with a regular expression. 

              - Let's say we needed to do a case sensitive search of the word "beso". We can do that as follows. 

              Ex: 
                var str = "Abebe beso bela!";
                var n = str.search(/Beso/i);

                n is 6
Using String replace()
        ********************** 
          - The replace() method takes two arguments and returns a new string with some or all matches of a pattern replaced by a replacement. 
            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace

          Ex: 
            var str = "Abebe beso bela!";
            var n = str.replace("bela", "teta");

            n is "Abebe beso teta!"

          - We can also use regular expression to find the match that we want to replace 
          
            Ex: 
              var str = "Abebe beso bela!";
              var n = str.replace(/bela/i, "teta"); 